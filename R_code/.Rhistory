subset = supp == "OJ", col = "orange")
legend(2.91, 12.1, c("VC", "OJ"),
fill = c("red", "orange"))
})
g_vc <- ToothGrowth$len[ToothGrowth$supp == "VC"]
g_oj <- ToothGrowth$len[ToothGrowth$supp == "oj"]
n_vc <- length(g_vc); n_oj <- length(g_oj)
g_oj <- ToothGrowth$len[ToothGrowth$supp == "OJ"]
n_vc <- length(g_vc); n_oj <- length(g_oj)
print n_vc
n_vc, n_oj
n_vc n_oj
n_vc; n_oj
?format
?print
parse("VC count", "mean", "sd")
paste("VC count", "mean", "sd")
paste(n_vc, m_vc", m_sd)
""
paste(n_vc, m_vc, m_sd)
paste(n_vc, m_vc, sd_vc)
g_vc <- ToothGrowth$len[ToothGrowth$supp == "VC"]
g_oj <- ToothGrowth$len[ToothGrowth$supp == "OJ"]
n_vc <- length(g_vc); n_oj <- length(g_oj)
m_vc <- round(mean(g_vc), 2); m_oj <- round(mean(g_oj), 2)
s_vc <- round(sd(g_vc) / sqrt(n_vc), 2); s_oj <- round(sd(g_oj) / sqrt(n_oj), 2)
paste(n_vc, m_vc, sd_vc)
paste(n_vc, m_vc, s_vc)
paste("supp", "count", "mean", "sd")
paste(n_vc, m_vc, s_vc)
?paste
paste("supp", "count", "mean", "sd", sep=tab)
paste("supp", "count", "mean", "sd", sep=table)
?sep
paste("supp", "count", "mean", "sd", sep=\t)
paste("supp", "count", "mean", "sd", sep='\t')
paste("supp", "count", "mean", "sd", sep='/t')
paste("supp", "count", "mean", "sd", sep='//t')
paste("supp", "count", "mean", "sd", sep='\\t')
paste("supp", "count", "mean", "sd", sep=\\t)
paste("supp", "count", "mean", "sd", sep=//t)
paste("supp", "count", "mean", "sd", sep="\t"")
;
paste("supp", "count", "mean", "sd", sep="\t")
paste("supp", "count", "mean", "sd", sep="\\t")
paste("supp", "count", "mean", "sd", sep='\t')
paste("supp", "count", "mean", "sd", sep="\t")
paste("supp", "count", "mean", "sd", sep="\\t")
paste("supp", "count", "mean", "sd", sep="//t")
paste("supp", "count", "mean", "sd", sep="/t")
paste("supp", "count", "mean", "sd", sep="  ")
paste("supp\t", "count", "mean", "sd", sep="  ")
paste("supp/t", "count", "mean", "sd", sep="  ")
paste("supp", "count", "mean", "sd", sep="  ")
sprintf("VC  %d  %d  %d", n_vc, m_vc, s_vc)
sprintf("VC  %f  %f  %f", n_vc, m_vc, s_vc)
sprintf("VC  %0f  %0.2f  %0.2f", n_vc, m_vc, s_vc)
sprintf("VC  %0.0f  %0.2f  %0.2f", n_vc, m_vc, s_vc)
paste("supp", "count", "mean", "sd", sep="  ");sprintf("VC  %d  %d  %d", n_vc, m_vc, s_vc)
paste("supp", "count", "mean", "sd", sep="  ");sprintf("VC  %0.0f  %0.2f  %0.2f", n_vc, m_vc, s_vc)
paste("supp", "count", "mean", "sd", sep="  ");sprintf("VC    %0.0f  %0.2f  %0.2f", n_vc, m_vc, s_vc)
paste("supp", "count", "mean", "sd", sep="  ");sprintf("VC    %0.0f     %0.2f  %0.2f", n_vc, m_vc, s_vc)
paste("supp", "count", "mean", "sd", sep="  ");sprintf("VC    %0.0f     %0.2f %0.2f", n_vc, m_vc, s_vc)
paste("supp", "count", "mean", "sd", sep="  ")
sprintf("VC    %0.0f     %0.2f %0.2f", n_vc, m_vc, s_vc)
sprintf("OJ    %0.0f     %0.2f %0.2f", n_oj, m_oj, s_oj)
paste("supp", "count", "mean", "sd", sep="  ")
sprintf("VC    %0.0f     %0.2f %0.2f", n_vc, m_vc, s_vc)
sprintf("OJ    %0.0f     %0.2f %0.2f", n_oj, m_oj, s_oj)
paste("supp", "count", "mean", "sd", sep="  ");
sprintf("VC    %0.0f     %0.2f %0.2f", n_vc, m_vc, s_vc);
sprintf("OJ    %0.0f     %0.2f %0.2f", n_oj, m_oj, s_oj)
paste("supp", "count", "mean", "sd", sep="  ");sprintf("VC    %0.0f     %0.2f %0.2f", n_vc, m_vc, s_vc);sprintf("OJ    %0.0f     %0.2f %0.2f", n_oj, m_oj, s_oj)
paste("supp", "count", "mean", "sd", sep="  ");sprintf("VC    %0.0f     %0.1f  %0.2f", n_vc, m_vc, s_vc);sprintf("OJ    %0.0f     %0.1f  %0.2f", n_oj, m_oj, s_oj)
?t.test
t.test(g_oj, g_vc)
t.test(g_oj, g_vc, paired=FALSE, var.equal=TRUE)$conf
t.test(g_oj, g_vc, paired=FALSE, var.equal=TRUE, alternative="greater")$conf
t.test(diff)$conf
t.test(diff)
diff <- g_oj - g_vc
t.test(diff)$conf
t.test(diff)
t.test(g_oj, g_vc, paired=FALSE, var.equal=TRUE)
t.test(diff, paired=FALSE)
t.test(g_oj, g_vc, paired=FALSE, var.equal=TRUE)$conf
t.test(g_oj, g_vc, paired=FALSE, var.equal=TRUE, alternative="greater")$conf
t.test(g_oj, g_vc, paired=FALSE, var.equal=TRUE, alternative="less")$conf
t.test(g_oj, g_vc, paired=FALSE, var.equal=TRUE, alternative="less")
t.test(g_oj, g_vc, paired=FALSE, var.equal=TRUE, alternative="greater")
p_supp <- t.test(g_oj, g_vc, paired=FALSE, var.equal=TRUE)$conf$p-value
t.test(g_oj, g_vc, paired=FALSE, var.equal=TRUE)$conf$inf
t.test(g_oj, g_vc, paired=FALSE, var.equal=TRUE)$conf$info
t.test(g_oj, g_vc, paired=FALSE, var.equal=TRUE, alternative="greater")$conf
t.test(g_oj, g_vc, paired=FALSE, var.equal=TRUE, alternative="greater")$conf.info
t.test(g_oj, g_vc, paired=FALSE, var.equal=TRUE, alternative="greater")$conf.inf
t.test(g_oj, g_vc, paired=FALSE, var.equal=TRUE, alternative="greater")$conf$inf
t.test(g_oj, g_vc, paired=FALSE, var.equal=TRUE, alternative="greater")$conf.p-value
t.test(g_oj, g_vc, paired=FALSE, var.equal=TRUE, alternative="greater")$conf.pvalue
t.test(g_oj, g_vc, paired=FALSE, var.equal=TRUE, alternative="greater")$conf.p_value
t.test(g_oj, g_vc, paired=FALSE, var.equal=TRUE, alternative="greater")$conf
t.test(g_oj, g_vc, paired=FALSE, var.equal=TRUE, alternative="greater")$p_value
t.test(g_oj, g_vc, paired=FALSE, var.equal=TRUE, alternative="greater")$pvalue
t.test(g_oj, g_vc, paired=FALSE, var.equal=TRUE, alternative="greater")$p-value
t.test(g_oj, g_vc, paired=FALSE, var.equal=TRUE, alternative="greater")
t.test(g_oj, g_vc, paired=FALSE, var.equal=TRUE, alternative="greater")$df
t.test(g_oj, g_vc, paired=FALSE, var.equal=TRUE, alternative="greater")$conf.df
t.test(g_oj, g_vc, paired=FALSE, var.equal=TRUE, alternative="greater")$conf$df
t.test(g_oj, g_vc, paired=FALSE, var.equal=TRUE, alternative="greater")$conf
t.test(g_oj, g_vc, paired=FALSE, var.equal=TRUE, alternative="greater")$conf.Inf
t.test(g_oj, g_vc, paired=FALSE, var.equal=TRUE, alternative="greater")$conf.level
t.test(g_oj, g_vc, paired=FALSE, var.equal=TRUE, alternative="greater")
t.test(g_oj, g_vc, paired=FALSE, var.equal=TRUE, alternative="greater")$level
t.test(g_oj, g_vc, paired=FALSE, var.equal=TRUE, alternative="greater")$conf
t.test(g_oj, g_vc, paired=FALSE, var.equal=TRUE, alternative="greater")$conf.int
t.test(g_oj, g_vc, paired=FALSE, var.equal=TRUE, alternative="greater")
t.test(g_oj, g_vc, paired=FALSE, var.equal=TRUE, alternative="greater")$p.value
t.test(g_oj, g_vc, paired=FALSE, var.equal=TRUE)$conf
t.test(g_oj, g_vc, paired=FALSE, var.equal=TRUE, conf.level = 0.9)$conf
t.test(g_oj, g_vc, paired=FALSE, var.equal=TRUE, conf.level = 0.92)$conf
t.test(g_oj, g_vc, paired=FALSE, var.equal=TRUE, conf.level = 0.91)$conf
t.test(g_oj, g_vc, paired=FALSE, var.equal=TRUE, conf.level = 0.94)$conf
t.test(g_oj, g_vc, paired=FALSE, var.equal=TRUE, conf.level = 0.93)$conf
t.test(g_oj, g_vc, paired=FALSE, var.equal=TRUE, conf.level = 0.93)$conf
t.test(g_oj, g_vc, paired=FALSE, var.equal=TRUE, conf.level = 0.935)$conf
t.test(g_oj, g_vc, paired=FALSE, var.equal=TRUE, conf.level = 0.94)$conf
t.test(g_oj, g_vc, paired=FALSE, var.equal=TRUE, conf.level = 0.935)$conf
t.test(g_oj, g_vc, paired=FALSE, var.equal=TRUE, conf.level = 0.936)$conf
t.test(g_oj, g_vc, paired=FALSE, var.equal=TRUE, conf.level = 0.938)$conf
t.test(g_oj, g_vc, paired=FALSE, var.equal=TRUE, conf.level = 0.939)$conf
t.test(g_oj, g_vc, paired=FALSE, var.equal=TRUE, conf.level = 0.939)
t.test(g_oj, g_vc, paired=FALSE, var.equal=TRUE, conf.level = 0.94)
g_dose1 <- ToothGrowth$len[ToothGrowth$dose == 0.5]
g_dose2 <- ToothGrowth$len[ToothGrowth$dose == 1]
g_dose3 <- ToothGrowth$len[ToothGrowth$dose == 2]
n_dose1 <- length(g_dose1); n_dose2 <- length(g_dose2); n_dose3 <- length(g_dose3)
m_dose1 <- mean(g_dose1); m_dose2 <- mean(g_dose2); m_dose3 <- mean(g_dose3)
s_dose1 <- sd(g_dose1) / sqrt(n_dose1)
s_dose2 <- sd(g_dose2) / sqrt(n_dose2)
s_dose3 <- sd(g_dose3) / sqrt(n_dose3)
paste("doze", "count", "mean", "sd", sep="  ")
sprintf("0.5   %0.0f     %0.1f  %0.2f", n_dose1, m_dose1, s_dose1)
sprintf("1.0   %0.0f     %0.1f  %0.2f", n_dose2, m_dose2, s_dose2)
sprintf("2.0   %0.0f     %0.1f  %0.2f", n_dose3, m_dose3, s_dose3)
?table
sum_supp <- dataframe(c(n_vc, m_vc, s_vc), c(n_oj, m_oj, s_oj))
sum_supp <- data.frame(c(n_vc, m_vc, s_vc), c(n_oj, m_oj, s_oj))
sum_supp
sum_supp <- data.frame(c("VC", n_vc, m_vc, s_vc), c("OJ", n_oj, m_oj, s_oj))
names(sum_supp) <- c("supp", "count", "mean", "sd")
sum_supp
sum_supp <- rbind(c("VC", n_vc, m_vc, s_vc), c("OJ", n_oj, m_oj, s_oj))
sum_supp
names(sum_supp) <- c("supp", "count", "mean", "sd")
sum_supp
sum_supp
sum_supp <- rbind(c("VC", n_vc, m_vc, s_vc), c("OJ", n_oj, m_oj, s_oj))
class(sum_supp)
sum_supp <- data.frame(rbind(c("VC", n_vc, m_vc, s_vc), c("OJ", n_oj, m_oj, s_oj)))
class(sum_supp)
sum_supp
names(sum_supp) <- c("supp", "count", "mean", "sd")
sum_supp
g_dose1 <- ToothGrowth$len[ToothGrowth$dose == 0.5]
g_dose2 <- ToothGrowth$len[ToothGrowth$dose == 1]
g_dose3 <- ToothGrowth$len[ToothGrowth$dose == 2]
n_dose1 <- length(g_dose1); n_dose2 <- length(g_dose2); n_dose3 <- length(g_dose3)
m_dose1 <- round(mean(g_dose1), 2)
m_dose2 <- round(mean(g_dose2), 2)
m_dose3 <- round(mean(g_dose3), 2)
s_dose1 <- round(sd(g_dose1) / sqrt(n_dose1), 2)
s_dose2 <- round(sd(g_dose2) / sqrt(n_dose2), 2)
s_dose3 <- round(sd(g_dose3) / sqrt(n_dose3), 2)
sum_dose <- data.frame(rbind(c(0.5, n_dose1, m_dose1, s_dose1), c(1, n_dose2, m_dose2, s_dose2)), c(2, n_dose3, m_dose3, s_dose3)))
names(sum_dose) <- c("dose", "count", "mean", "sd")
sum_dose
sum_supp <- data.frame(rbind(c("VC", n_vc, m_vc, s_vc), c("OJ", n_oj, m_oj, s_oj)))
names(sum_supp) <- c("supp", "count", "mean", "sd")
sum_supp
sum_dose <- data.frame(rbind(c(0.5, n_dose1, m_dose1, s_dose1), c(1, n_dose2, m_dose2, s_dose2), c(2, n_dose3, m_dose3, s_dose3)))
names(sum_dose) <- c("dose", "count", "mean", "sd")
sum_dose
t.test(g_dose2, g_dose1, paired=FALSE, var.equal=TRUE, alternative="greater")$conf
t.test(g_dose2, g_dose1, paired=FALSE, var.equal=TRUE, alternative="greater")
t.test(g_dose2, g_dose1, paired=FALSE, var.equal=TRUE, alternative="greater")$conf
ht_d1 <- t.test(g_dose2, g_dose1, paired=FALSE, var.equal=TRUE, alternative="greater")
pv_d1 <- ht_d1$p-value
ht_d2 <- t.test(g_dose3, g_dose2, paired=FALSE, var.equal=TRUE, alternative="greater")
pv_d2 <- ht_d2$p-value
ht_d1 <- t.test(g_dose2, g_dose1, paired=FALSE, var.equal=TRUE, alternative="greater")
pv_d1 <- ht_d1$p.value
ht_d2 <- t.test(g_dose3, g_dose2, paired=FALSE, var.equal=TRUE, alternative="greater")
pv_d2 <- ht_d2$p.value
pv_d1
pv_d2
ht_d1
ht_d1 <- t.test(g_dose2, g_dose1, paired=FALSE, var.equal=TRUE, alternative="greater")
al_d1 <- ht_d1$alternative; pv_d1 <- ht_d1$p.value
ht_d2 <- t.test(g_dose3, g_dose2, paired=FALSE, var.equal=TRUE, alternative="greater")
al_d2 <- ht_d2$alternative; pv_d2 <- ht_d2$p.value
al_d1
ht_d1$method
ht_d1$statistic
getwd
getwd()
swirl()
library(swirl)
swirl()
myplot(2)
myplot(20)
myplot2(2)
qt(.975, 2)
myplot2(20)
sleep
range(g1)
range(g2)
difference <- g2 - g1
mean(difference)
s <- sd(difference)
mn + c(-1,1)*qt(.975, 9)*s/sqrt(10)
x$conf.int
t.test(difference)$conf.int
7*15.34^2+20*18.23^2
sp <- 7*15.34^2+20*18.23^2
27
ns <- 27
sp <- sqrt(sp/ns)
(132.86-127.44)
(132.86-127.44)+c(-1,1)*qt(.975,ns)*sp*sqrt(1/8+1/21)
132.86-127.44+c(-1,1)*qt(.975,ns)*sp*sqrt(1/8+1/21)
sp <- sqrt(var(g1)+var(g2))/sqrt(2)
sp <- sqrt((9*var(g1)+9*var(g2))/18)
md + c(-1,1)*sp*sqrt(1/10+1/10)
md + c(-1,1)*qt(.975,18)*sp*sqrt(1/10+1/10)
t.test(g2, g1, paired=FALSE, var.equal=TRUE)
t.test(g2, g1, paired=FALSE, var.equal=TRUE)$conf
t.test(g2, g1, paired=TRUE)$conf
num <- sqrt(15.34^2/8 + 18.23^2/21)
num <- (15.34^2/8 + 18.23^2/21)^2
den <- 15.34^4/8^2/7+18.23^4/21^2/20
mydf <- num / den
132.86-127.44+c(-1,1)*qt(.975,mydf)*(15.34^2/8+18.23^2/21)
132.86-127.44+c(-1,1)*qt(.975,mydf)*sqrt(15.34^2/8+18.23^2/21)
10/10
swirl()
(32-30) / 1
swirl()
swirl()
swirl()
library(swirl)
swirl()
swirl()
swirl
swirl()
swirl()
1
swirl()
pt(2.5, 15, lower.tail=FALSE)
qnorm(.95)
qnorm(.99)
swirl()
swirl()
power.t.test(n=100, delta=1, sd=4, type="one.sample", alt="one.side")
?power.t.test
power <- pnorm(10+qnorm(.95)*.4, mean=11, sd=.4, lower.tail=FALSE)
power
power.t.test(n=100, delta=1, sd=0.4, type="one.sample", alt="one.side")
power.t.test(n=100, delta=1, sd=4, type="two.sample", alt="one.side")
?power.norm.test
?power.pnorm.test
n <- (qnorm(.95)+qnorm(.8)^2*.04^2/.1^2)
n
n <- (qnorm(.95)+qnorm(.8))^2*.04^2/.1^2
n
n <- (qnorm(.95)+qnorm(.8))^2*.04^2/.01^2
3 + c(-1,1)*qnorm(.975)*1.1*10
3 + c(-1,1)*qnorm(.95)*1.1*10
3 + c(-1,1)*qnorm(.95)*1.1/10
3 + c(-1,1)*qnorm(.975)*1.1/10
pbinom(54, prob=.5, size=100, lower.tail=FALSE)
?ppois
round(ppois(15800, 520*30, lower.tail=FALSE), 4)
round(ppois(15800-1, 520*30, lower.tail=FALSE), 4)
data(mtcars)
m6 <- mtcars$mpg[mtcars$cyl==6]
m8 <- mtcars$mpg[mtcars$cyl==8]
t.test(m6, m8, paired=FALSE, var.equal=TRUE)
t.test(m8, m6, paired=FALSE, alt="two.sides", var.equal=TRUE)
t.test(m8, m6, paired=FALSE, alternative="two.sides", var.equal=TRUE)
t.test(m8, m6, paired=FALSE, alternative="two.sided", var.equal=TRUE)
n8 <- length(m8)
n6 <- length(m6)
mixprob <- (n8-1)/(n8+n6-2)
mixprob
s8 <- sd(m8)
s6 <- sd(m6)
s <- sqrt(mixprob * s8^2 +(1-mixprob)*s6^2)
s
g8 <- mtcars$mpg[mtcars$cyl==8]; g6 <- mtcars$mpg[mtcars$cyl==6]
m8 <- mean(g8); s8 <- sd(g8); m6 <- mean(g6); s6 <- sd(g6)
t.test(m8, m6, paired=FALSE, alternative="two.sided", var.equal=TRUE)
t.test(g8, g6, paired=FALSE, alternative="two.sided", var.equal=TRUE)
n8 <- length(g8); n6 <- length(g6)
n8 <- length(g8); n6 <- length(g6)
mixprob <- (n8-1) / (n8+n6-2)
s <- sqrt(mixprob * s8^2 + (1-mixprob) * s6^2)
s
z <- (m8-m6) / (s*sqrt(1/n8+1/n6))
z
pz <- 2*pnorm(-abs(z))
pz
g1 <- c(140, 138, 150, 148, 135)
g2 <- c(132, 135, 151, 146, 130)
t.test(g2, g1, paired=TRUE, alternative="two.sided", var.equal=TRUE)
t.test(g1, g2, paired=TRUE, alternative="two.sided", var.equal=TRUE)
1100 + c(-1,1)*qt(.975)*30/3
1100 + c(-1,1)*qt(.975, 8)*30/3
?pt
ts <- qt(.95, 4-1)
ts
pt(2, 4-1, lower.tail=FALSE)
pt(ts, 4-1, lower.tail=FALSE)
?pbinom
pbinom(2, size=4, prob=.5, lower.tail=FALSE)
?ppois
ppois(1787, labmda=100*10, lower.tail=FALSE)
ppois(1787, lambda=100*10, lower.tail=FALSE)
ppois(1787, lambda=100*10, lower.tail=TRUE)
ppois(1788, lambda=100*10, lower.tail=TRUE)
ppois(1786, lambda=100*10, lower.tail=TRUE)
1-ppois(1786, lambda=100*10, lower.tail=FALSE)
1-ppois(9, labmda=0.01*1787, lower.tail=FALSE)
1-ppois(9, lambda=0.01*1787, lower.tail=FALSE)
1-ppois(10, lambda=0.01*1787, lower.tail=FALSE)
ppois(10, lambda=0.01*1787, lower.tail=FALSE)
ppois(10, lambda=0.01*1787, lower.tail=TRUE)
ppois(9, lambda=0.01*1787, lower.tail=TRUE)
n1 <- n2 <- 9
x1 <- -3 ## treated
s1 <- 1.5
x2 <- 1  # placebo
s2 <- 1.8
spsq <- ((n1 - 1) * s1^2 + (n2 - 1) * s2^2) / (n1 + n2 - 2)
(x1 - x2) + c(-1, 1) * qt(.975, 16) * sqrt(spsq * (1/n1 + 1/n2))
c(-1, 1) * qt(.975, 16) * sqrt(spsq * (1/n1 + 1/n2))
qt(.975, 16)
se <- sqrt(spsq * (1/n1 + 1/n2))
ts <- (x1-x2) / se
pv <- 2 * pt(-abs(ts))
pv <- 2 * pt(-abs(ts), 16)
pv
pz <- 2 * pnorm(-abs(ts))
pz
n1 <- n2 <- 9
x1 <- -3 ## treated
s1 <- 1.5
x2 <- 1  # placebo
s2 <- 1.8
spsq <- ((n1 - 1) * s1^2 + (n2 - 1) * s2^2) / (n1 + n2 - 2)
se <- sqrt(spsq * (1/n1 + 1/n2))
ts <- (x1-x2) / se
pv <- 2 * pt(-abs(ts), 16)
pv
ts <- (x2-x1) / se
pv <- 2 * pt(-abs(ts), 16)
pv
pv <- 2 * pt(abs(ts), 16)
pv
se
pv <- 2 * pt(ts, 16)
pv
ts <- (x1-x2) / se
pv <- 2 * pt(ts, 16)
pv
se
spsq
n1 <- n2 <- 9
x1 <- -3 ## treated
s1 <- 1.5
x2 <- 1  # placebo
s2 <- 1.8
spsq <- ((n1 - 1) * s1^2 + (n2 - 1) * s2^2) / (n1 + n2 - 2)
se <- sqrt(spsq * (1/n1 + 1/n2))
ts <- (x1-x2) / se
ts
pv <- 2 * pt(ts, 16)
se
pv
pv <- 2 * pt(-ts, 16)
pv
pv <- 2 * pt(ts, 16, lower.tail=FALSE)
pv
2*pt(ts,16)
1100 + c(-1,1)*qt(.975, 8)*30/3
(1077+1123)/2
(1077-1123)/2
u1 <- (1077+1123) / 2
se <- (1123-1077) / 2
ts <- (u1-1078) / se
pv <- 2 * pt(ts, 8)
pv
pv <- 2 * pt(-ts, 8)
pv
ts
se
se <- (1123-1077) / 2 / qt(.95, 8)
ts <- (u1-1078) / se
se
ts
pv <- 2 * pt(-ts, 8)
pv
power.t.test(n=100, delta=1, sd=4, type="one.sample", alt="one.side")
power <- pnorm(10+qnorm(.95)*.4, mean=11, sd=.4, lower.tail=FALSE)
power
power.t.test(n=100, delta=.01, sd=.04, type="one.sample", alt="one.side")
n <- (qnorm(.95)+qnorm(.9))^2*.04^2/.01^2
n
library(swirl)
swirl()
swirl()
myplot(34)
myplot(33.3)
myplot(30)
myplot(28)
z <- qnorm(.96)
z <- qnorm(.95)
pnorm(30+z, mean=30, lower.tail=FALSE, sd=1)
pnorm(30+z, mean=32, lower.tail=FALSE, sd=1)
pnorm(30+z, mean=32,sd=1, lower.tail=FALSE)
pnorm(30+z, mean=32,sd=2, lower.tail=FALSE)
pnorm(30+z*2, mean=32,sd=2, lower.tail=FALSE)
power.t.test(n=16, delta=2/4, sd=1, type="one.sample", alt="one.sided")$power
power.t.test(n=16, delta=2, sd=4, type="one.sample", alt="one.sided")$power
power.t.test(n=16, delta=100, sd=200, type="one.sample", alt="one.sided")$power
power.t.test(power=.8, delta=2/4, sd=1, type="one.sample", alt="one.sided")$n
power.t.test(power=.8, delta=2, sd=4, type="one.sample", alt="one.sided")$n
power.t.test(power=.8, delta=100, sd=200, type="one.sample", alt="one.sided")$n
power.t.test(power=.8, n=26, sd=1, type="one.sample", alt="one.sided")$delta
power.t.test(power=.8, n=27, sd=1, type="one.sample", alt="one.sided")$delta
swirl()
head(pValues)
sum(pValues<.05)
p.adjust(pValues, method="bonferroni")
sum(p.adjust(pValues, method="bonferroni")<.05)
sum(p.adjust(pValues, method="BH")<.05)
tail(pValues2)
tail(trueStatus)
table(pValue2<.05, trueStatus)
table(pValues2<.05, trueStatus)
0
24/500
table(p.adjust(pValues2, method="bonferroni"), trueStatus)
table(p.adjust(pValues2, method="bonferroni")<.05, trueStatus)
table(p.adjust(pValues2, method="BH")<.05, trueStatus)
l
sum(c(1:6)*1/6)
print(g2)
head(sh)
nh
median(resampledMedians)
median(sh)
sam <- sample(fh, nh*B, replace=TRUE)
resam <- matrix(sam, B, nh)
meds <- apply(resam, 1, mean)
meds <- apply(resam, 1, median)
median(sam)
sam
swirl()
sam
sam <- sample(fh, nh*B, replace=TRUE)
median(meds)-median(fh)
sd(meds)
sd(resampledMedians)
quantile(resampledMedians, c(.025,.975))
quantile(meds, c(.025,.975))
dim(InsectSprays)
names(InsectSprays)
range(Bdata$count)
range(Cdata$count)
BCCounts
BCCcounts
BCcounts
group
testStat
obs <- testStat(BCcounts, group)
obs
mean(Cdata$count) - mean(Bdata$count)
mean(Bdata$count) - mean(Cdata$count)
smaple(group)
sample(group)
perms <- sapply(1:10000,function(i) testStat(BCcounts, sample(group)))
mean(perms>obs)
testStat(DEcounts, group)
perms <- saplly(1:10000, function(i) testStat(DEcounts, sample(group)))
perms <- sapply(1:10000, function(i) testStat(DEcounts, sample(group)))
(32-30)
(32-30)*4/10
15
qt(.95,15)
dim(fs)
t.test(fs$sheight-fs$fheight, paired=TRUE)
t.test(fs$sheight-fs$fheight)
11.7885 * sd(fs$sheight-fs$fgeight)/sqrt(1078)
11.7885 * sd(fs$sheight-fs$fheight)/sqrt(1078)
mybin
8
pnorm(2)
pnorm(2, lower.tail=FALSE)
mybin
pbinom(6, size=8, prob=.5, lower.tail=FALSE)
pbinom(7, size=8, prob=.5)
ppois(9, lambda=5, lower.tail=FALSE)
